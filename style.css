/*
Comentario en CSS

Regla css: consta de 2 partes:
1) el selector
2)bloque de declaraciones:{
  atributo: valor;
  atributo-de-mas-dos-palabras: otro-valor;
}
*/

/*son mala pr√°ctica porque son bloqueantes a la hora en el que el navegador lee instrucciones*/

@import url(assets/otra-hoja.css);

h1 {
  color: orangered;
  background-color: black;
}

/*
Selectores b√°sicos
1) Etiquetas - son elementos html
2) Identificadores - atributo id - # (se llama con el numeral)
3) Clases - atributo class - .(se llama con el punto)
*/

p {
  color: midnightblue;
}

/*Dar estilos con id se considera un AntiPatr√≥n*/
#parrafo-dos {
  background-color: skyblue;
}

/* Dar estilos con clases nos permite reutilizar nuestro c√≥digo CSS*/
.bg-skyblue {
  background-color: skyblue;
}

.bg-steelblue {
  background-color: steelblue;
}

.text-20 {
  font-size: 20px;
}

.text-32 {
  font-size: 32px;
}

.text-white {
  color: white;
}

.hijos-directos > li {
  background-color: thistle;
}

.hijos-descendientes b {
  background-color: thistle;
}

/* los selectores de hermanos van a aplicar a los elementos que son hermanos y que esten por debajo del elemento dereferencia*/
.hermanos-general ~ li {
  background-color: thistle;
}

.hermanos-adyacentes + li {
  background-color: thistle;
}

/*Selectores de atributo*/
.selectores-atributos a[href] {
  color: orangered;
}

.selectores-atributos a[target="_blank"] {
  font-weight: bold;
}

/*el comod√≠n del * aplica el estilo si contiene el texto en cuesti√≥n en cualquier parte*/
.selectores-atributos a[href*="jonmircha"] {
  font-size: 24px;
}

/*el comod√≠n del ^ aplica el estilo si contiene el texto en cuesti√≥n al inicio*/
.selectores-atributos a[href^="http:"] {
  text-decoration: none;
}

/*el comod√≠n del $ aplica el estilo si contiene el texto en cuesti√≥n al final*/
.selectores-atributos a[href$=".com"] {
  background-color: black;
}

/*el comod√≠n del ~ aplica el estilo si contiene el texto en cuesti√≥n en una lista separada por espacios*/
.selectores-atributos a[class~="cursos"] {
  background-color: midnightblue;
}

/*el comod√≠n del | aplica el estilo si contiene el texto en cuesti√≥n en una lista separada por espacios y que despu√©s del texto en cuesti√≥n venga un gui√≥n medio -*/
.selectores-atributos a[class|="menu"] {
  font-style: italic;
}

/*Selector Universal*/
* {
  font-family: sans-serif;
}

.selector-universal * {
  font-size: 24px;
}

/*Pseudoclases - Dan estilos dependiendo del contexto, posici√≥n o estado del elemento*/
.form-pseudoclases *:required {
  border-color: yellow;
}

.form-pseudoclases *:valid {
  border-color: green;
}

.form-pseudoclases *:invalid {
  border-color: red;
}

.form-pseudoclases *:focus {
  background-color: skyblue;
}

.form-pseudoclases *:disabled {
  background-color: pink;
}

.menu-pseudoclases a:visited {
  color: olive;
}
.menu-pseudoclases a:hover {
  color: orange;
}

.p-pseudoclases:hover {
  font-size: 20px;
}

#temario-css:target {
  background-color: lightgreen;
}

.lista-pseudoclases li:first-child {
  color: green;
}

.lista-pseudoclases li:last-child {
  color: violet;
}

.lista-pseudoclases li:nth-child(3) {
  color: navy;
}

.lista-pseudoclases li:nth-child(4n) {
  font-size: 20px;
}

.lista-pseudoclases li:nth-child(3n + 1) {
  font-weight: bold;
}

.lista-pseudoclases li:nth-child(even) {
  background-color: yellow;
}

.lista-pseudoclases li:nth-child(odd) {
  background-color: orange;
}

.articulo-pseudoclases p:last-of-type {
  background-color: pink;
}

.articulo-pseudoclases p:nth-of-type(3) {
  background-color: fuchsia;
}

.articulo-pseudoclases *:not(p) {
  background-color: beige;
}

/*Pseudoelementos - dan estilos a partes espec√≠ficas de un elemento, se usa el :: para diferenciarlos de las pseudoclases*/

.saga-geminis::before {
  content: "ü§º‚Äç‚ôÇÔ∏è";
}

.saga-geminis::after {
  content: "‚ôè";
}

.saga-precio::before {
  content: "$";
  font-weight: bold;
}

.saga-precio::after {
  content: "USD";
  font-weight: bold;
}

.p-pseudoelementos::first-letter {
  font-weight: bold;
  font-size: 32px;
}

.p-pseudoelementos::first-line {
  color: coral;
}

.p-pseudoelementos::selection {
  color: greenyellow;
  background-color: black;
}

.input-pseudoelementos::placeholder {
  color: green;
}

/*Agrupar Selectores*/

.form-agrupar-selectores input[type="text"],
.form-agrupar-selectores input[type="email"],
.form-agrupar-selectores textarea {
  border-color: yellow;
  border-width: 2px;
  border-style: dashed; /*l√≠neas discontinuas*/
  background-color: black;
  font-size: 20px;
  display: block;
  width: 300px;
}

/*El algoritmo de CSS: es la forma en que el navegador aplica los estilos al documento HTML. Es vital entender este concepto para que entiendas c√≥mo se aplican y en algunas ocasiones se sobreescriben las reglas CSS
1) La Cascada
2)La Especificidad 
3)La Herencia

La Cascada es el mecanismo que tiene el navegador web para ir aplicando los estilos y tiene en cuenta lo siguiente en este orden:
1) El origen del c√≥digo:
-El user agent (los estilos por default del navegador)
-Personalizaciones del usuario
-Los estilos del autor
2)La Especificidad del Selector
3)Orden de aparici√≥n

La Especificidad e el peso que tiene un selector cuando hay un conflicto de estilos. Se calcula de la siguiente forma
Etiquetas y pseudoelementos__________0,0,0,1
Clases, atributos y pseudoclases_____0,0,1,0
Identificadores______________________0,1,0,0
Estilos en l√≠nea_____________________1,0,0,0
Important_______________________Rompe la especificidad
*/

blockquote#cita-marco.cita-marco {
  background-color: lightsteelblue;
}

blockquote {
  background-color: burlywood;
}

#cita-marco {
  background-color: lightgreen;
}

blockquote.cita-marco {
  background-color: tomato;
}

.cita-marco {
  background-color: cornflowerblue;
}

.cita-marco {
  background-color: mediumaquamarine !important;
}

blockquote#cita-marco {
  background-color: lightsalmon;
}

.cita-marco {
  background-color: moccasin !important;
  background-color: darkorange !important;
  font-size: 32px;
  border-style: dotted;
  border-color: red;
}

.cita-marco cite {
  background-color: pink;
  background-color: inherit;
  font-size: 24px;
  font-size: initial;
  border-style: inherit;
  border-color: inherit;
}
