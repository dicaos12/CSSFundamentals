/*-Las propiedades FLOAT y POSITION nos permiten modificar la posición natural de cualquer elemento del documento HTML
-El navegador coloca cada elemento teniendo en cuenta el orden en el que aparece en el documento y su tipo de visualización dependiendo si en un documento en línea o de bloque
-con FLOAT y POSITION podemos modificar este comportamiento

-Elementos flotantes: 
-float: Convierte un elemento en flotante desplazándolo hasta la zona más a la izquierda (o derecha) de la posición en la que originalmente se encontraba.
-clear: Limpia la flotación (left, right, both)

Tipos de posicionamiento:
-static (default)
-relative
-absolute
-fixed
-stiky

Para mover los elementos posicionados se activan las propiedades:
-top: eje y
-bottom: eje y
-lef: eje x
-right: eje x
-z-index: profundidad, eje z

Las propiedades top y left van a tener preferencia por sobre bottom y right respectivamente
Estas 5 propiedades no funcionan con el valor de static
*/

.static {
  background-color: yellow;
  position: static;
  top: 10px;
  left: 10px;
}

/*
-Relative:  El elemento conserva sus dimensiones y posición original en el flujo del documento. Si se mueve toma como referencia su posición original
*/

.relative {
  background-color: turquoise;
  position: relative;
  width: 300px;
  height: 50px;
  /*top: 50px;
  left: 50px;*/
  bottom: 50px;
  right: 50px;
  top: -30px;
  left: -10px;
  top: 300px;
  left: 50px;
}

/*Absolute: el elemento pierde sus dimensiones y posición original en el flujo del documento. Si se mueve puede tomar como referencia 2 elementos: 
1) el primero ancestro con posicionamiento relativo
2)Si no se encuentra un ancestro relativo, se mueve respecto del documento HTML*/

.absolute {
  background-color: tomato;
  position: absolute;
  width: 200px;
  height: 50px;
  /*top: 0;
  left: 0; 
  top: 100px;
  left: 100px;*/
  right: 0;
  bottom: 0px;
}

.relative-parent {
  background-color: khaki;
  position: relative;
  width: 600px;
  height: 50px;
  top: 50px;
  left: 50px;
}

.absolute-child {
  background-color: lightcoral;
  position: absolute;
  /*left: 0;
  top: 0*/
  /*bottom: 0;
  right: 0;*/
  top: -50px;
  left: -50px;
}

/*-fixed: El elemento pierde sus dimensiones y posición original en el flujo del documento. Si se mueve, toma como referencia el documento HTML y queda fijo en la posición, cuando el scroll se mueva, el elemento no lo hará, queda FIJO*/

.fixed {
  background-color: lightgreen;
  position: fixed;
  width: 300px;
  height: 100px;
  /*right: 20px;
  bottom: 10px;*/
  top: 30px;
  left: 400px;
}
/*Sticky: es una combinación de posicionamiento relative y fixed, para este posicionamiento las propiedades de top, left, bottom, y right no mueven el elemento.Sirven como un punto de referencia mientras no lleguen a ese valor, el elemento se comporta como relative, cuando llega a ese valor se convierte en fixed.
  
  Para que este comportamiento funione, el elemento stiky debe ser hijo directo del body o su elemento contenedor debe tener dimensiones definidas y solo será sticky dentro de las dimensiones de su contenedor padre*/

.sticky {
  background-color: lightskyblue;
  position: sticky;
  top: 50px;
}

.sticky-parent {
  border: thin dashed black;
  height: 600px;
}

.sticky-child {
  background-color: lightslategray;
  position: sticky;
  top: 75px;
}

/* z-index: propiedad que permite controlar la profuncidad de los elementos posicionados, su valor por defecto es auto, acepta números positivos, negativos y cero. 
A mayor valor, el elemento está más al frente, a menor valor, más al fondo.
Un elemento padre nunca podrá estar sobre sus elementos hijos, sin embargo, los elementos hijos si pueden dándoles un valor negativo y que ele elemnto padre no tendga definida valor de z-index*/

.z-index-1,
.z-index-2 {
  background-color: aqua;
  border: thin solid black;
  position: relative;
  width: 200px;
  height: 200px;
}

.z-index-1 {
  z-index: 1;
  z-index: 0;
}

.z-index-2 {
  top: -200px;
  left: 100px;
  z-index: 2;
  z-index: -1;
}

.z-index-parent {
  background-color: mediumorchid;
  width: 300px;
  height: 300px;
  position: relative;
}

.z-index-child {
  background-color: mediumvioletred;
  position: relative;
  width: 150px;
  height: 150px;
  top: -75px;
  left: 75px;
  z-index: -1;
}
